import osimport timeimport threadingfrom Classes.Driver import Driverclass Internal:    def CountFilesByExtension(path, extension):        drivers = 0        try:            for file in os.listdir(path):                if os.path.isdir("\\".join((path, file))):                    drivers += Internal.CountFilesByExtension("\\".join((path, file)), extension)                if file.endswith(extension):                    drivers += 1        except PermissionError:            pass        return drivers            def GetAllDriversInPath(path, CallbackFunction, mainThread):        threadsList = []        driversList = []        try:            for file in os.listdir(path):                if os.path.isdir("\\".join((path, file))):                    driversList += Internal.GetAllDriversInPath("\\".join((path, file)), CallbackFunction, mainThread)                if file.endswith(".sys"):                    thread = threading.Thread(target=CallbackFunction, args=(path, file))                    threadsList.append(thread)                    thread.start()        except PermissionError:            pass        for thread in threadsList:            setattr(mainThread, "progress", getattr(mainThread, "progress", 0) + 1)            while getattr(thread, "driver", None) == None:                time.sleep(0.025)            if getattr(thread, "driver", None) != False:                driversList.append(getattr(thread, "driver", None))            getattr(mainThread, "bar", None).update(getattr(mainThread, "progress", 0))        return driversList